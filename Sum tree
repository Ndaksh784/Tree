#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};


struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}


int sum(struct Node* root) {
    if (root == NULL)
        return 0;
    return root->data + sum(root->left) + sum(root->right);
}


int isSumTree(struct Node* root) {
    if (root == NULL || (root->left == NULL && root->right == NULL))
        return 1; 
    int leftSum = sum(root->left);
    int rightSum = sum(root->right);

    
    if (root->data == leftSum + rightSum &&
        isSumTree(root->left) &&
        isSumTree(root->right)) {
        return 1;
    }
    return 0;
}


int main() {
    struct Node* root = createNode(26);
    root->left = createNode(10);
    root->right = createNode(3);
    root->left->left = createNode(4);
    root->left->right = createNode(6);
    root->right->right = createNode(3);

    if (isSumTree(root))
        printf("The tree is a sum tree.\n");
    else
        printf("The tree is not a sum tree.\n");

    return 0;
}
